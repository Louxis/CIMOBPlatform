@model CIMOBProject.Models.Student
@inject SignInManager<ApplicationUser> SignInManager
@inject UserManager<ApplicationUser> UserManager
@{
    ViewData["Title"] = "Details";
}

<h1>Perfil de @Html.DisplayFor(model => model.UserFullname)</h1>

<div class="profile-info">
   <div class="profile-left-container">
       <div class="profile-personal-info">
           <h4>Dados Pessoais</h4>
           <label>@Html.DisplayNameFor(model => model.UserFullname):&nbsp;</label>@Html.DisplayFor(model => model.UserFullname)
           <br />
           <label>@Html.DisplayNameFor(model => model.BirthDate):&nbsp;</label>@Html.DisplayFor(model => model.BirthDate)
           <br />
           <label>@Html.DisplayNameFor(model => model.UserCc):&nbsp;</label>@Html.DisplayFor(model => model.UserCc)
       </div>
       <br />
       <div class="profile-contact-info">
           <h4>Contactos</h4>
           <label>@Html.DisplayNameFor(model => model.Email):&nbsp;</label>@Html.DisplayFor(model => model.Email)
           <br />
           <label>@Html.DisplayNameFor(model => model.PhoneNumber):&nbsp;</label>@Html.DisplayFor(model => model.PhoneNumber)
       </div>
       <br />
       <div class="profile-address-info">
           <h4>Dados de Morada</h4>
           <label>@Html.DisplayNameFor(model => model.UserAddress):&nbsp;</label>@Html.DisplayFor(model => model.UserAddress)
           <br />
           <label>@Html.DisplayNameFor(model => model.PostalCode):&nbsp;</label>@Html.DisplayFor(model => model.PostalCode)
       </div>
       <br />
       <a asp-action="Edit" asp-controller="Students" asp-route-id="@ViewData["selectedId"]" class="btn btn-default">Editar Perfil</a>
       <!--<a asp-action="Index" asp-controller="Documents" asp-route-userId="@ViewData["selectedId"]" class="btn btn-default">Documentos</a>-->
       @await Html.PartialAsync("_DetailsHiddenButtons")
   </div>
    <div class="profile-school-info">
        <h4>Dados Académicos</h4>
        <label>@Html.DisplayNameFor(model => model.CollegeSubject.College.CollegeName):&nbsp;</label>@Html.DisplayFor(model => model.CollegeSubject.College.CollegeName)
        <br />
        <label>@Html.DisplayNameFor(model => model.StudentNumber):&nbsp;</label>@Html.DisplayFor(model => model.StudentNumber)
        <br />
        <label>@Html.DisplayNameFor(model => model.ALOGrade):&nbsp;</label>@Html.DisplayFor(model => model.ALOGrade)
        <br />
        <label>Estado atual da candidatura:&nbsp;</label>
        
        @if(ViewData["applicationId"].Equals("N/A")) {
            @ViewData["applicationId"]
        }
        else {

            <span id="CurrentState">@Html.DisplayFor(model => model.Applications.OrderBy(a => a.ApplicationId).Last().ApplicationStat.Name)</span>
            <br />
            <br />
            <a asp-action="ApplicationHistory" asp-controller="Applications" asp-route-studentId="@Model.Id" class="btn btn-default" id="ApplicationHistory">Histórico da candidatura</a>
        }
        @if (!ViewData["applicationId"].Equals("N/A"))
        {
            <a asp-action="Details" asp-controller="Applications" asp-route-id="@ViewData["applicationId"]" class="btn btn-default">Detalhes Candidatura</a>

        }
        @if (SignInManager.IsSignedIn(User) && User.IsInRole("Employee"))
        {
            <a asp-action="Create" asp-controller="TroubleTickets" asp-route-userId=@UserManager.GetUserId(User) asp-route-studentNumber=@Model.StudentNumber class="btn btn-default">Criar Trouble Ticket</a>
        }
        <label>Estado da entrevista: </label> @ViewData["interview"]


</div>
    <br />
</div>